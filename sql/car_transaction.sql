-- MySQL Script generated by MySQL Workbench
-- Mon 08 Apr 2019 11:15:10 AM +07
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema cartransaction
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cartransaction
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cartransaction` ;
USE `cartransaction` ;

-- -----------------------------------------------------
-- Table `cartransaction`.`offices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`offices` (
  `officeCode` INT NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `addressLine` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`officeCode`),
  UNIQUE INDEX `officeCode_UNIQUE` (`officeCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`employees` (
  `employeeNumber` INT NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `jobTitle` VARCHAR(45) NOT NULL,
  `employees_employeeNumber` INT NOT NULL,
  `offices_officeCode` INT NOT NULL,
  PRIMARY KEY (`employeeNumber`, `employees_employeeNumber`, `offices_officeCode`),
  UNIQUE INDEX `employeeNumber_UNIQUE` (`employeeNumber` ASC),
  INDEX `fk_employees_employees1_idx` (`employees_employeeNumber` ASC),
  INDEX `fk_employees_offices1_idx` (`offices_officeCode` ASC),
  CONSTRAINT `fk_employees_employees1`
    FOREIGN KEY (`employees_employeeNumber`)
    REFERENCES `cartransaction`.`employees` (`employeeNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_employees_offices1`
    FOREIGN KEY (`offices_officeCode`)
    REFERENCES `cartransaction`.`offices` (`officeCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`Customers` (
  `customerNumber` INT NOT NULL,
  `customerName` VARCHAR(45) NOT NULL,
  `contactLastName` VARCHAR(45) NOT NULL,
  `contactFirstName` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `addressLine` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `postalCode` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `creditLimit` VARCHAR(45) NULL,
  `employees_employeeNumber` INT NOT NULL,
  PRIMARY KEY (`customerNumber`, `employees_employeeNumber`),
  UNIQUE INDEX `customerNumber_UNIQUE` (`customerNumber` ASC),
  INDEX `fk_Customers_employees1_idx` (`employees_employeeNumber` ASC),
  CONSTRAINT `fk_Customers_employees1`
    FOREIGN KEY (`employees_employeeNumber`)
    REFERENCES `cartransaction`.`employees` (`employeeNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`order` (
  `orderNumber` INT NOT NULL,
  `orderDate` DATE NOT NULL,
  `requiredDate` DATE NOT NULL,
  `shippedDate` DATE NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `comments` VARCHAR(45) NOT NULL,
  `quantityOrdered` INT NOT NULL,
  `priceEach` FLOAT NOT NULL,
  `Customers_customerNumber` INT NOT NULL,
  PRIMARY KEY (`orderNumber`, `Customers_customerNumber`),
  UNIQUE INDEX `orderNumber_UNIQUE` (`orderNumber` ASC),
  INDEX `fk_order_Customers_idx` (`Customers_customerNumber` ASC),
  CONSTRAINT `fk_order_Customers`
    FOREIGN KEY (`Customers_customerNumber`)
    REFERENCES `cartransaction`.`Customers` (`customerNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`payments` (
  `customerNumber` INT NOT NULL,
  `checkNumber` VARCHAR(45) NOT NULL,
  `paymentDate` DATE NOT NULL,
  `amount` VARCHAR(45) NOT NULL,
  `Customers_customerNumber` INT NOT NULL,
  PRIMARY KEY (`customerNumber`, `Customers_customerNumber`),
  UNIQUE INDEX `customerNumber_UNIQUE` (`customerNumber` ASC),
  INDEX `fk_payments_Customers1_idx` (`Customers_customerNumber` ASC),
  CONSTRAINT `fk_payments_Customers1`
    FOREIGN KEY (`Customers_customerNumber`)
    REFERENCES `cartransaction`.`Customers` (`customerNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`productlines`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`productlines` (
  `productLine` INT NOT NULL,
  `textDescription` VARCHAR(45) NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`productLine`),
  UNIQUE INDEX `productLine_UNIQUE` (`productLine` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`products` (
  `productCode` INT NOT NULL,
  `productName` VARCHAR(45) NOT NULL,
  `productScale` VARCHAR(45) NOT NULL,
  `productVendor` VARCHAR(45) NOT NULL,
  `productDescription` VARCHAR(45) NOT NULL,
  `quantityInStock` INT NOT NULL,
  `buyPrice` FLOAT NOT NULL,
  `MSRP` FLOAT NOT NULL,
  `productlines_productLine` INT NOT NULL,
  PRIMARY KEY (`productCode`, `productlines_productLine`),
  UNIQUE INDEX `productCode_UNIQUE` (`productCode` ASC),
  INDEX `fk_products_productlines1_idx` (`productlines_productLine` ASC),
  CONSTRAINT `fk_products_productlines1`
    FOREIGN KEY (`productlines_productLine`)
    REFERENCES `cartransaction`.`productlines` (`productLine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cartransaction`.`orderDetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cartransaction`.`orderDetail` (
  `order_orderNumber` INT NOT NULL,
  `order_Customers_customerNumber` INT NOT NULL,
  `products_productCode` INT NOT NULL,
  PRIMARY KEY (`order_orderNumber`, `order_Customers_customerNumber`, `products_productCode`),
  INDEX `fk_order_has_products_products1_idx` (`products_productCode` ASC),
  INDEX `fk_order_has_products_order1_idx` (`order_orderNumber` ASC, `order_Customers_customerNumber` ASC),
  CONSTRAINT `fk_order_has_products_order1`
    FOREIGN KEY (`order_orderNumber` , `order_Customers_customerNumber`)
    REFERENCES `cartransaction`.`order` (`orderNumber` , `Customers_customerNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_has_products_products1`
    FOREIGN KEY (`products_productCode`)
    REFERENCES `cartransaction`.`products` (`productCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
